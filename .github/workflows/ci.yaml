name: Tests and Checks

on: [push]

jobs:
  lint:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "yarn"

      - name: Install deps
        run: yarn

      - name: Lint
        run: yarn lint

      - name: pretty
        run: yarn pretty
  
  unit-test:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "yarn"

      - name: Install deps
        run: yarn

      - name: Prepare
        run: yarn prepare:docker

      - name: Codegen
        run: yarn codegen

      - name: Run Matchstick tests
        run: yarn test

  integration-test-core-pool:
    runs-on: ubuntu-22.04
    needs: unit-test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Start containers
        run: docker compose up -d
      
      - name: Sleep to allow graph-node to become accessible
        shell: bash
        run: sleep 45s

      - name: Generate Core Pool graphql types
        run: |
          docker exec -i subgraph-hardhat-node yarn workspace @venusprotocol/core-pool-subgraph run prepare:docker
          docker exec -i subgraph-hardhat-node yarn workspace @venusprotocol/core-pool-subgraph run codegen
          docker exec -i subgraph-hardhat-node yarn workspace @venusprotocol/core-pool-subgraph run create:docker
          docker exec -i subgraph-hardhat-node yarn workspace @venusprotocol/core-pool-subgraph run deploy:docker
          sleep 5s
          docker exec -i subgraph-hardhat-node yarn workspace @venusprotocol/core-pool-subgraph run generate-subgraph-types
      
      - name: Run Core Pool integration tests
        run: |
          docker exec -i subgraph-hardhat-node yarn workspace @venusprotocol/core-pool-subgraph run test:integration --bail
      
      - name: Stop containers
        if: always()
        run: |
          docker compose down -v
          docker system prune -f -a --volumes

  integration-test-isolated-pools:
    runs-on: ubuntu-22.04
    needs: unit-test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Start containers
        run: docker compose up -d
      
      - name: Sleep to allow graph-node to become accessible
        shell: bash
        run: sleep 45s

      - name: Generate Isolated Pools graphql types
        run: |
          docker exec -i subgraph-hardhat-node yarn workspace @venusprotocol/isolated-pools-subgraph run prepare:docker
          docker exec -i subgraph-hardhat-node yarn workspace @venusprotocol/isolated-pools-subgraph run codegen
          docker exec -i subgraph-hardhat-node yarn workspace @venusprotocol/isolated-pools-subgraph run create:docker
          docker exec -i subgraph-hardhat-node yarn workspace @venusprotocol/isolated-pools-subgraph run deploy:docker
          sleep 5s
          docker exec -i subgraph-hardhat-node yarn workspace @venusprotocol/isolated-pools-subgraph run generate-subgraph-types
      
      - name: Run Isolated Pools integration tests
        run: |
          docker exec -i subgraph-hardhat-node yarn workspace @venusprotocol/isolated-pools-subgraph run test:integration --bail
      
      - name: Stop containers
        if: always()
        run: |
          docker compose down -v
          docker system prune -f -a --volumes

  integration-test-governance:
    runs-on: ubuntu-22.04
    needs: unit-test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Start containers
        run: docker compose up -d
      
      - name: Sleep to allow graph-node to become accessible
        shell: bash
        run: sleep 45s
      
      - name: Generate Governance graphql types
        run: |
          docker exec -i subgraph-hardhat-node yarn workspace @venusprotocol/governance-subgraph run prepare:docker
          docker exec -i subgraph-hardhat-node yarn workspace @venusprotocol/governance-subgraph run codegen
          docker exec -i subgraph-hardhat-node yarn workspace @venusprotocol/governance-subgraph run create:docker
          docker exec -i subgraph-hardhat-node yarn workspace @venusprotocol/governance-subgraph run deploy:docker
          sleep 5s
          docker exec -i subgraph-hardhat-node yarn workspace @venusprotocol/governance-subgraph run generate-subgraph-types

      - name: Run Governance integration integration tests
        run: |
          docker exec -i subgraph-hardhat-node yarn workspace @venusprotocol/governance-subgraph run test:integration --bail

      - name: Stop containers
        if: always()
        run: |
          docker compose down -v
          docker system prune -f -a --volumes

  release-cross-chain-governance:
    runs-on: ubuntu-22.04
    needs: [unit-test, lint]
    if:
      contains('
        refs/heads/main
        refs/heads/testnet
      ', github.ref)
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "yarn"

      - name: Install deps
        run: yarn
      
      - name: Codegen
        run: |
          yarn prepare:docker
          yarn codegen

      - name: Release subgraph
        env:
          MAINNET_GRAPH_CLI_API_KEY: ${{ secrets.MAINNET_GRAPH_CLI_API_KEY }}
          TESTNET_GRAPH_CLI_API_KEY: ${{ secrets.TESTNET_GRAPH_CLI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.VENUS_TOOLS_TOKEN }}
          GIT_AUTHOR_NAME: Venus Tools
          GIT_AUTHOR_EMAIL: tools@venus.io
          GIT_COMMITTER_NAME: Venus Tools
          GIT_COMMITTER_EMAIL: tools@venus.io
        run: |
          yarn workspace @venusprotocol/cross-chain-governance-subgraph run semantic-release

  release-external-promos:
    runs-on: ubuntu-22.04
    needs: [unit-test, lint, release-cross-chain-governance]
    if:
      contains('
        refs/heads/main
        refs/heads/testnet
      ', github.ref)
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "yarn"

      - name: Install deps
        run: yarn
      
      - name: Codegen
        run: |
          yarn prepare:docker
          yarn codegen

      - name: Release subgraph
        env:
          MAINNET_GRAPH_CLI_ALCHEMY_KEY: ${{ secrets.MAINNET_GRAPH_CLI_ALCHEMY_KEY }}
          TESTNET_GRAPH_CLI_ALCHEMY_KEY: ${{ secrets.TESTNET_GRAPH_CLI_ALCHEMY_KEY }}
          GITHUB_TOKEN: ${{ secrets.VENUS_TOOLS_TOKEN }}
          GIT_AUTHOR_NAME: Venus Tools
          GIT_AUTHOR_EMAIL: tools@venus.io
          GIT_COMMITTER_NAME: Venus Tools
          GIT_COMMITTER_EMAIL: tools@venus.io
        run: |
          yarn workspace @venusprotocol/external-promos-subgraph run semantic-release

  release-isolated-pools:
    runs-on: ubuntu-22.04
    needs: [unit-test, lint, integration-test-isolated-pools, release-etherfi-promo]
    if:
      contains('
        refs/heads/main
        refs/heads/testnet
      ', github.ref)
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "yarn"

      - name: Install deps
        run: yarn

      - name: Codegen
        run: |
          yarn prepare:docker
          yarn codegen

      - name: Release subgraph
        env:
          MAINNET_GRAPH_CLI_API_KEY: ${{ secrets.MAINNET_GRAPH_CLI_API_KEY }}
          TESTNET_GRAPH_CLI_API_KEY: ${{ secrets.TESTNET_GRAPH_CLI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.VENUS_TOOLS_TOKEN }}
          GIT_AUTHOR_NAME: Venus Tools
          GIT_AUTHOR_EMAIL: tools@venus.io
          GIT_COMMITTER_NAME: Venus Tools
          GIT_COMMITTER_EMAIL: tools@venus.io
        run: |
          yarn workspace @venusprotocol/isolated-pools-subgraph run semantic-release

  release-protocol-reserve:
    runs-on: ubuntu-22.04
    needs: [unit-test, lint, release-isolated-pools]
    if:
      contains('
        refs/heads/main
        refs/heads/testnet
      ', github.ref)
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "yarn"

      - name: Install deps
        run: yarn

      - name: Codegen
        run: |
          yarn prepare:docker
          yarn codegen

      - name: Release subgraph
        env:
          MAINNET_GRAPH_CLI_API_KEY: ${{ secrets.MAINNET_GRAPH_CLI_API_KEY }}
          TESTNET_GRAPH_CLI_API_KEY: ${{ secrets.TESTNET_GRAPH_CLI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.VENUS_TOOLS_TOKEN }}
          GIT_AUTHOR_NAME: Venus Tools
          GIT_AUTHOR_EMAIL: tools@venus.io
          GIT_COMMITTER_NAME: Venus Tools
          GIT_COMMITTER_EMAIL: tools@venus.io
        run: |
          yarn workspace @venusprotocol/protocol-reserve-subgraph run semantic-release

  release-core-pool:
    runs-on: ubuntu-22.04
    needs: [unit-test, lint, integration-test-core-pool, release-protocol-reserve]
    if:
      contains('
        refs/heads/main
        refs/heads/testnet
      ', github.ref)
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "yarn"

      - name: Install deps
        run: yarn
      
      - name: Codegen
        run: |
          yarn prepare:docker
          yarn codegen

      - name: Release subgraph
        env:
          MAINNET_GRAPH_CLI_API_KEY: ${{ secrets.MAINNET_GRAPH_CLI_API_KEY }}
          TESTNET_GRAPH_CLI_API_KEY: ${{ secrets.TESTNET_GRAPH_CLI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.VENUS_TOOLS_TOKEN }}
          GIT_AUTHOR_NAME: Venus Tools
          GIT_AUTHOR_EMAIL: tools@venus.io
          GIT_COMMITTER_NAME: Venus Tools
          GIT_COMMITTER_EMAIL: tools@venus.io
        run: |
          yarn workspace @venusprotocol/core-pool-subgraph run semantic-release

  release-governance:
    runs-on: ubuntu-22.04
    needs: [unit-test, lint, integration-test-governance, release-core-pool]
    if:
      contains('
        refs/heads/main
        refs/heads/testnet
      ', github.ref)
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "yarn"

      - name: Install deps
        run: yarn

      - name: Codegen
        run: |
          yarn prepare:docker
          yarn codegen

      - name: Release subgraph
        env:
          MAINNET_GRAPH_CLI_API_KEY: ${{ secrets.MAINNET_GRAPH_CLI_API_KEY }}
          TESTNET_GRAPH_CLI_API_KEY: ${{ secrets.TESTNET_GRAPH_CLI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.VENUS_TOOLS_TOKEN }}
          GIT_AUTHOR_NAME: Venus Tools
          GIT_AUTHOR_EMAIL: tools@venus.io
          GIT_COMMITTER_NAME: Venus Tools
          GIT_COMMITTER_EMAIL: tools@venus.io
        run: |
          yarn workspace @venusprotocol/governance-subgraph run semantic-release
