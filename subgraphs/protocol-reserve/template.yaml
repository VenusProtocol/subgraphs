specVersion: 1.2.0
description: Venus Protocol Reserve manages income generated from Venus money markets.
repository: https://github.com/VenusProtocol/subgraphs
schema:
  file: ./schema.graphql
dataSources:
  - name: ConverterNetwork
    kind: ethereum/contract
    network: {{ network }}
    source:
      address: "{{ converterNetworkAddress }}"
      abi: ConverterNetwork
      startBlock: {{ converterNetworkStartBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./src/mappings/converterNetwork.ts
      entities:
        - ConverterNetwork
      abis:
        - name: ConverterNetwork
          file: ../../node_modules/@venusprotocol/protocol-reserve/artifacts/contracts/TokenConverter/ConverterNetwork.sol/ConverterNetwork.json
        - name: RiskFund
          file: ../../node_modules/@venusprotocol/protocol-reserve/artifacts/contracts/Interfaces/IRiskFund.sol/IRiskFundGetters.json
      eventHandlers:
        - event: ConverterAdded(indexed address)
          handler: handleConverterAdded
        - event: ConverterRemoved(indexed address)
          handler: handleConverterRemoved
      blockHandlers:
        - handler: handleInitializationConverterNetwork
          filter:
            kind: once
  - name: BTCBPrimeConverter
    kind: ethereum/contract
    network: {{ network }}
    source:
      abi: TokenConverter
      address: "{{ btcbPrimeConverterAddress }}"
      startBlock: {{ btcbPrimeConverterStartBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./src/mappings/tokenConverter.ts
      entities:
        - TokenConverter
      abis:
        - name: TokenConverter
          file: ../../node_modules/@venusprotocol/protocol-reserve/artifacts/contracts/TokenConverter/SingleTokenConverter.sol/SingleTokenConverter.json
        - name: RiskFund
          file: ../../node_modules/@venusprotocol/protocol-reserve/artifacts/contracts/Interfaces/IRiskFund.sol/IRiskFundGetters.json
        - name: ERC20
          file: ../../node_modules/@venusprotocol/protocol-reserve/artifacts/@openzeppelin/contracts/token/ERC20/ERC20.sol/ERC20.json
      eventHandlers:
        - event: ConversionConfigUpdated(indexed address,indexed address,uint256,uint256,uint8,uint8)
          handler: handleConversionConfigUpdated
        - event:  ConversionPaused(indexed address)
          handler: handleConversionPaused
        - event: ConversionResumed(indexed address)
          handler: handleConversionResumed
        - event: ConverterNetworkAddressUpdated(indexed address,indexed address)
          handler: handleConverterNetworkAddressUpdated
        - event: DestinationAddressUpdated(indexed address,indexed address)
          handler: handleDestinationAddressUpdated
        - event: BaseAssetUpdated(indexed address,indexed address)
          handler: handleDestinationAddressUpdated
        - event: PriceOracleUpdated(indexed address,indexed address)
          handler: handlePriceOracleUpdated
      blockHandlers:
        - handler: handleInitializationBtcbPrimeConverter
          filter:
            kind: once
  - name: ETHPrimeConverter
    kind: ethereum/contract
    network: {{ network }}
    source:
      abi: TokenConverter
      address: "{{ ethPrimeConverterAddress }}"
      startBlock: {{ ethPrimeConverterStartBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./src/mappings/tokenConverter.ts
      entities:
        - TokenConverter
      abis:
        - name: TokenConverter
          file: ../../node_modules/@venusprotocol/protocol-reserve/artifacts/contracts/TokenConverter/SingleTokenConverter.sol/SingleTokenConverter.json
        - name: RiskFund
          file: ../../node_modules/@venusprotocol/protocol-reserve/artifacts/contracts/Interfaces/IRiskFund.sol/IRiskFundGetters.json
        - name: ERC20
          file: ../../node_modules/@venusprotocol/protocol-reserve/artifacts/@openzeppelin/contracts/token/ERC20/ERC20.sol/ERC20.json
      eventHandlers:
        - event: ConversionConfigUpdated(indexed address,indexed address,uint256,uint256,uint8,uint8)
          handler: handleConversionConfigUpdated
        - event:  ConversionPaused(indexed address)
          handler: handleConversionPaused
        - event: ConversionResumed(indexed address)
          handler: handleConversionResumed
        - event: ConverterNetworkAddressUpdated(indexed address,indexed address)
          handler: handleConverterNetworkAddressUpdated
        - event: DestinationAddressUpdated(indexed address,indexed address)
          handler: handleDestinationAddressUpdated
        - event: BaseAssetUpdated(indexed address,indexed address)
          handler: handleDestinationAddressUpdated
        - event: PriceOracleUpdated(indexed address,indexed address)
          handler: handlePriceOracleUpdated
      blockHandlers:
        - handler: handleInitializationEthPrimeConverter
          filter:
            kind: once
  - name: RiskFundConverter
    kind: ethereum/contract
    network: {{ network }}
    source:
      abi: TokenConverter
      address: "{{ riskFundConverterAddress }}"
      startBlock: {{ riskFundConverterStartBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./src/mappings/tokenConverter.ts
      entities:
        - TokenConverter
      abis:
        - name: TokenConverter
          file: ../../node_modules/@venusprotocol/protocol-reserve/artifacts/contracts/TokenConverter/RiskFundConverter.sol/RiskFundConverter.json
        - name: RiskFund
          file: ../../node_modules/@venusprotocol/protocol-reserve/artifacts/contracts/Interfaces/IRiskFund.sol/IRiskFundGetters.json
        - name: ERC20
          file: ../../node_modules/@venusprotocol/protocol-reserve/artifacts/@openzeppelin/contracts/token/ERC20/ERC20.sol/ERC20.json
      eventHandlers:
        - event: ConversionConfigUpdated(indexed address,indexed address,uint256,uint256,uint8,uint8)
          handler: handleConversionConfigUpdated
        - event:  ConversionPaused(indexed address)
          handler: handleConversionPaused
        - event: ConversionResumed(indexed address)
          handler: handleConversionResumed
        - event: ConverterNetworkAddressUpdated(indexed address,indexed address)
          handler: handleConverterNetworkAddressUpdated
        - event: DestinationAddressUpdated(indexed address,indexed address)
          handler: handleDestinationAddressUpdated
        - event: PriceOracleUpdated(indexed address,indexed address)
          handler: handlePriceOracleUpdated
      blockHandlers:
        - handler: handleInitializationRiskFundConverter
          filter:
            kind: once
  - name: USDCPrimeConverter
    kind: ethereum/contract
    network: {{ network }}
    source:
      abi: TokenConverter
      address: "{{ usdcPrimeConverterAddress }}"
      startBlock: {{ usdcPrimeConverterStartBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./src/mappings/tokenConverter.ts
      entities:
        - TokenConverter
      abis:
        - name: TokenConverter
          file: ../../node_modules/@venusprotocol/protocol-reserve/artifacts/contracts/TokenConverter/SingleTokenConverter.sol/SingleTokenConverter.json
        - name: RiskFund
          file: ../../node_modules/@venusprotocol/protocol-reserve/artifacts/contracts/Interfaces/IRiskFund.sol/IRiskFundGetters.json
        - name: ERC20
          file: ../../node_modules/@venusprotocol/protocol-reserve/artifacts/@openzeppelin/contracts/token/ERC20/ERC20.sol/ERC20.json
      eventHandlers:
        - event: ConversionConfigUpdated(indexed address,indexed address,uint256,uint256,uint8,uint8)
          handler: handleConversionConfigUpdated
        - event:  ConversionPaused(indexed address)
          handler: handleConversionPaused
        - event: ConversionResumed(indexed address)
          handler: handleConversionResumed
        - event: ConverterNetworkAddressUpdated(indexed address,indexed address)
          handler: handleConverterNetworkAddressUpdated
        - event: DestinationAddressUpdated(indexed address,indexed address)
          handler: handleDestinationAddressUpdated
        - event: BaseAssetUpdated(indexed address,indexed address)
          handler: handleDestinationAddressUpdated
        - event: PriceOracleUpdated(indexed address,indexed address)
          handler: handlePriceOracleUpdated
      blockHandlers:
        - handler: handleInitializationUsdcPrimeConverter
          filter:
            kind: once
  - name: USDTPrimeConverter
    kind: ethereum/contract
    network: {{ network }}
    source:
      abi: TokenConverter
      address: "{{ usdtPrimeConverterAddress }}"
      startBlock: {{ usdtPrimeConverterStartBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./src/mappings/tokenConverter.ts
      entities:
        - TokenConverter
      abis:
        - name: TokenConverter
          file: ../../node_modules/@venusprotocol/protocol-reserve/artifacts/contracts/TokenConverter/SingleTokenConverter.sol/SingleTokenConverter.json
        - name: RiskFund
          file: ../../node_modules/@venusprotocol/protocol-reserve/artifacts/contracts/Interfaces/IRiskFund.sol/IRiskFundGetters.json
        - name: ERC20
          file: ../../node_modules/@venusprotocol/protocol-reserve/artifacts/@openzeppelin/contracts/token/ERC20/ERC20.sol/ERC20.json
      eventHandlers:
        - event: ConversionConfigUpdated(indexed address,indexed address,uint256,uint256,uint8,uint8)
          handler: handleConversionConfigUpdated
        - event:  ConversionPaused(indexed address)
          handler: handleConversionPaused
        - event: ConversionResumed(indexed address)
          handler: handleConversionResumed
        - event: ConverterNetworkAddressUpdated(indexed address,indexed address)
          handler: handleConverterNetworkAddressUpdated
        - event: DestinationAddressUpdated(indexed address,indexed address)
          handler: handleDestinationAddressUpdated
        - event: BaseAssetUpdated(indexed address,indexed address)
          handler: handleDestinationAddressUpdated
        - event: PriceOracleUpdated(indexed address,indexed address)
          handler: handlePriceOracleUpdated
      blockHandlers:
        - handler: handleInitializationUsdtPrimeConverter
          filter:
            kind: once
  - name: XVSVaultConverter
    kind: ethereum/contract
    network: {{ network }}
    source:
      abi: TokenConverter
      address: "{{ xvsVaultConverterAddress }}"
      startBlock: {{ xvsVaultConverterStartBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./src/mappings/tokenConverter.ts
      entities:
        - TokenConverter
      abis:
        - name: TokenConverter
          file: ../../node_modules/@venusprotocol/protocol-reserve/artifacts/contracts/TokenConverter/SingleTokenConverter.sol/SingleTokenConverter.json
        - name: RiskFund
          file: ../../node_modules/@venusprotocol/protocol-reserve/artifacts/contracts/Interfaces/IRiskFund.sol/IRiskFundGetters.json
        - name: ERC20
          file: ../../node_modules/@venusprotocol/protocol-reserve/artifacts/@openzeppelin/contracts/token/ERC20/ERC20.sol/ERC20.json
      eventHandlers:
        - event: ConversionConfigUpdated(indexed address,indexed address,uint256,uint256,uint8,uint8)
          handler: handleConversionConfigUpdated
        - event:  ConversionPaused(indexed address)
          handler: handleConversionPaused
        - event: ConversionResumed(indexed address)
          handler: handleConversionResumed
        - event: ConverterNetworkAddressUpdated(indexed address,indexed address)
          handler: handleConverterNetworkAddressUpdated
        - event: DestinationAddressUpdated(indexed address,indexed address)
          handler: handleDestinationAddressUpdated
        - event: BaseAssetUpdated(indexed address,indexed address)
          handler: handleBaseAssetUpdated
        - event: PriceOracleUpdated(indexed address,indexed address)
          handler: handlePriceOracleUpdated
      blockHandlers:
        - handler: handleInitializationXvsVaultConverter
          filter:
            kind: once
templates:
  - name: ERC20
    kind: ethereum/contract
    network: {{ network }}
    source:
      abi: ERC20
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./src/mappings/token.ts
      entities:
        - TokenConverterConfig
        - TokenConverter
      abis:
        - name: ERC20
          file: ../../node_modules/@venusprotocol/venus-protocol/artifacts/contracts/Tokens/BEP20Interface.sol/BEP20Interface.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransferOut
          topic1: ["{{ xvsVaultConverterAddress }}", "{{ btcbPrimeConverterAddress }}", "{{ ethPrimeConverterAddress }}", "{{ riskFundConverterAddress }}", "{{ usdcPrimeConverterAddress }}", "{{ usdtPrimeConverterAddress }}"]
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransferIn
          topic2: ["{{ xvsVaultConverterAddress }}", "{{ btcbPrimeConverterAddress }}", "{{ ethPrimeConverterAddress }}", "{{ riskFundConverterAddress }}", "{{ usdcPrimeConverterAddress }}", "{{ usdtPrimeConverterAddress }}"]
