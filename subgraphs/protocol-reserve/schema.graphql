enum ConversionAccessibility {
    NONE
    ALL
    ONLY_FOR_CONVERTERS
    ONLY_FOR_USERS
}

"""
Converter Network entity
"""
type ConverterNetwork @entity {
    id: Bytes!
    address: Bytes!
    tokenConverters: [TokenConverter!]! @derivedFrom(field: "converterNetwork")
}

"""
Token
"""
type Token @entity(immutable: true) {
    "Address of the asset"
    id: Bytes!
    "Address of the asset"
    address: Bytes!
    "Symbol of the asset"
    symbol: String
    "Decimals of the asset"
    decimals: Int!
}

"""
Token Converter entity
"""
type TokenConverter @entity {
    id: Bytes!
    address: Bytes!
    converterNetwork: ConverterNetwork
    destinationAddress: Bytes!
    baseAsset: Bytes!
    configs: [TokenConverterConfig!]! @derivedFrom(field: "tokenConverter")
    paused: Boolean!
    priceOracleAddress: Bytes!
}

"""
Token Converter Config
"""
type TokenConverterConfig @entity {
    id: Bytes!
    tokenConverter: TokenConverter!
    tokenIn: Token!
    tokenOut: Token!
    incentive: BigInt!
    access: ConversionAccessibility!
    tokenOutBalance: BigInt!
}
